@using mopsik_www.ViewModels
@model MapViewModel

@{
    ViewData["Title"] = "Mapa";
}


<!doctype html>
<html lang="en">
<head>
    <link rel="stylesheet" href="https://openlayers.org/en/v4.6.5/css/ol.css" type="text/css">
    <style>
        .map {
            height: 100%;
            width: 100%;
            z-index: 0;
            position: relative;
        }
    </style>
    <script src="https://openlayers.org/en/v4.6.5/build/ol.js" type="text/javascript"></script>
</head>
<body>
    <script type="text/javascript">
        var markers = [];
        var vehicleType = "@Model.VehicleType";
    </script>
    <br />
    <div id="map" class="map">
        <div id="popup" data-html="true"></div>
        <div id="vehicle-type-choice">
            <span>Wyświetlaj zajętości dla:</span>
            <div style="margin-top: 5px">
                @using (Html.BeginForm("SetVehicleType", "Map", FormMethod.Post, new { id = "CarForm", style = "display:inline-block" }))
                    {
                    <input type="hidden" name="vehicleType" value="car">
                    <button class="@Model.CarButtonClass" type="submit" form="CarForm" value="Submit" id="submitCarForm">
                        <i class="material-icons" title="Samochód osobowy">directions_car</i>
                    </button>
                }
                @using (Html.BeginForm("SetVehicleType", "Map", FormMethod.Post, new { id = "TruckForm", style = "display:inline-block" }))
                    {
                    <input type="hidden" name="vehicleType" value="truck">
                    <button class="@Model.TruckButtonClass" type="submit" form="TruckForm" value="Submit" id="submitTruckForm">
                        <i class="material-icons" title="Samochód ciężarowy">local_shipping</i>
                    </button>
                }
                @using (Html.BeginForm("SetVehicleType", "Map", FormMethod.Post, new { id = "BusForm", style = "display:inline-block" }))
                    {
                    <input type="hidden" name="vehicleType" value="bus">
                    <button class="@Model.BusButtonClass" type="submit" form="BusForm" value="Submit" id="submitBusForm">
                        <i class="material-icons" title="Autobus">directions_bus</i>
                    </button>
                }
            </div>
        </div>
    </div>
 
    @foreach (MopViewModel mop in Model.MopsView.Mops) {
        <script type="text/javascript">
            var usage;
            var usageColor;
            var usageTextColor;
            switch (vehicleType) {
                case "car":
                    usage = '@mop.Usage.Car.PrintValue';
                    usageColor = '@mop.Usage.Car.BackgroundColor';
                    usageTextColor = '@mop.Usage.Car.TextColor';
                    break;
                case "bus":
                    usage = '@mop.Usage.Bus.PrintValue';
                    usageColor = '@mop.Usage.Bus.BackgroundColor';
                    usageTextColor = '@mop.Usage.Bus.TextColor';
                    break;
                case "truck":
                    usage = '@mop.Usage.Truck.PrintValue';
                    usageColor = '@mop.Usage.Truck.BackgroundColor';
                    usageTextColor = '@mop.Usage.Truck.TextColor';
                    break;
            }
            var marker = new ol.Feature({
                type: 'icon',
                geometry: new ol.geom.Point(ol.proj.fromLonLat([parseFloat("@mop.Coordinates.LongitudeString"), parseFloat("@mop.Coordinates.LatitudeString")])),
                name: '@mop.Title',
                usage: usage,
                id: @mop.Id,
                usageColor: usageColor,
                usageTextColor: usageTextColor,
                road_number: '@mop.RoadNumber',
                direction: '@mop.Direction'
            });
            marker.setStyle(new ol.style.Style({
                image: new ol.style.Icon({
                    anchor: [0.5, 1],
                    color: usageColor,
                    crossOrigin: 'anonymous',
                    src: '/images/parking_white_small.png',
                })
            }));
            markers.push(marker);
        </script>
     }
        <script type="text/javascript">

        var markerLayer = new ol.layer.Vector({
            source: new ol.source.Vector({
                features: markers
            }),
        });


        var map = new ol.Map({
            target: 'map',
            loadTilesWhileAnimating: true,
            layers: [
                new ol.layer.Tile({
                    source: new ol.source.OSM()
                }),
                markerLayer
            ],
            view: new ol.View({
                center: ol.proj.fromLonLat([19.1451, 51.9194]),
                zoom: 6,
                minZoom: 2
            })
        });

        var popup_element = document.getElementById('popup');

        var popup = new ol.Overlay({
            element: popup_element,
            positioning: 'bottom-center',
            stopEvent: false,
            offset: [0, -20]
        });
        map.addOverlay(popup);

        map.on('click', function (evt) {
            var feature = map.forEachFeatureAtPixel(evt.pixel,
                function (feature) {
                    return feature;
                });
            console.log(feature);
            console.log(popup_element);
            if (feature) {
                var coordinates = feature.getGeometry().getCoordinates();
                popup.setPosition(coordinates);
                $('#popup').popover({
                    'placement': 'top',
                    'html': true,
                }).attr('data-content', `<div style=\"width:150px\">
                    <p style="margin: 0px; padding: 0px;"><b>` + feature.get('name') + `</b></p>
                    <p style="margin: 0px; padding: 0px;"><i>Kierunek:</i> ` + feature.get('direction') + `</p>
                    <p style="margin: 0px; padding: 0px;"><i>Droga:</i> ` + feature.get('road_number') + `</p>
                    <div style="margin: 0px; padding: 0px;">
                    <span class="badge" style="background: ` + feature.get('usageColor') + `; color:` + feature.get('usageTextColor') + `; width: 80px; line-height: 20px; font-size: 14px;">
                                ` + feature.get('usage') + `
                    </span>
                    <a href=\"/Details/Details?id=` + feature.get('id') + `\">
                                    <button class=\"mdl-button mdl-js-button mdl-button--icon mdl-button--colored\" >
                                        <i class=\"material-icons\">info</i>
                                    </button>
                                </a>
                    </div>
                            </div> `);
                $('#popup').popover('show');
            } else {
                $(popup_element).popover('destroy');
            }
        });

        // change mouse cursor when over marker
        map.on('pointermove', function (e) {
            var pixel = map.getEventPixel(e.originalEvent);
            var hit = map.hasFeatureAtPixel(pixel);
            map.getTargetElement().style.cursor = hit ? 'pointer' : '';
        });
    </script>
</body>
</html>